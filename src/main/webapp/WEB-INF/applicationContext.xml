<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="servletContextWrapper" class="ro.duclad.examples.struts2.utils.ServletContextWrapper" />

    <!-- Configure the location

			arg 0 defines the looked up environment variable (takes precedence)
			arg 1 defines an alternative path within the web application
	 -->
    <bean id="configLocation" class="ro.duclad.examples.struts2.utils.ConfigResourceFactory"
          factory-method="createLocation">

        <constructor-arg index="0" value="AUTHORS_CONFIG_PATH"/>
        <constructor-arg index="1" value="/WEB-INF/classes/application.properties"/>
        <constructor-arg index="2">
            <util:property-path path="servletContextWrapper.servletContext"/>
        </constructor-arg>
    </bean>
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" ref="configLocation"/>
    </bean>

    <context:annotation-config/>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.user}"/>
        <property name="password" value="${database.password}"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>

    <tx:annotation-driven/>
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="authorDao" class="ro.duclad.examples.struts2.dao.hibernate.AuthorDaoHibernateImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="authorServices" class="ro.duclad.examples.struts2.services.impl.AuthorServicesImpl">
        <property name="authorDao" ref="authorDao"/>
    </bean>

    <bean id="authorsActions" class="ro.duclad.examples.struts2.actions.author.CrudActions">
        <property name="authorServices" ref="authorServices"/>
        <property name="imageFolder" value="/${image.folder}"/>
    </bean>

    <bean id="imageAction" class="ro.duclad.examples.struts2.actions.author.ImageAction">
        <property name="authorServices" ref="authorServices"/>
        <property name="imageFolder" value="${image.folder}"/>
    </bean>
</beans>
